server:
  port: 9000
spring:
  rabbitmq:
    host: 192.168.99.108
  redis:
    host: 192.168.99.108
  cloud:
    gateway:
      discovery:
        locator:
          # 开启后，如果有新服务注册到注册中心，gateway不会主动同步
          # 但会在下一次通过lb调用服务时进行同步
          enabled: true
          lower-case-service-id: true
#          predicates[0]:
#            name: Path
#            args[pattern]: "'/'+serviceId+'/**'"
#          filters[0]:
#            name: RewritePath
#            args[regexp]: "'/' + serviceId + '/(?<remaining>.*)'"
#            args[replacement]: "'/${remaining}'"
#          predicates[1]:
#            name: Path
#            args[pattern]: "'/'+serviceId+'/**'"
#          filters[1]:
#            name: AddRequestParameter
#            args:
#              name: "'foo'"
#              value: serviceId
      routes:
      - id: repeat_product_route
        uri: lb://product
        predicates:
        - Path=/repeat-product/**
        - Method=GET
        filters:
        - StripPrefix=1
      - id: product_route
        uri: lb://product
        predicates:
        - Path=/product/**
        filters:
        - StripPrefix=1
        - AddRequestParameter=foo, bar
        # 自定义filter
        - Product=true
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 1
            redis-rate-limiter.burstCapacity: 2
            key-resolver: "#{@IPKeyResolver}"
        # 通过设置order可以覆盖通过DiscoveryClient自动建立的路由
        order: -1000